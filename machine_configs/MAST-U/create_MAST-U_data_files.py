"""This script creates the data files for the MAST-U machine configuration in
the format required by freegsnke. It contains a load of geometry data and logic
for creating the dictionaries. The dictionaries are ultimately saved as pickle
files in this directory."""

import numpy as np
import pickle

eta_copper = 1.55e-8  # Resistivity in Ohm*m, for active coils


# Active coils
# ------------

d1_upper_r = [
    0.35275,
    0.36745015,
    0.38215014,
    0.39685005,
    0.35275,
    0.35275,
    0.35275,
    0.35275,
    0.35275039,
    0.36745039,
    0.36745039,
    0.36745039,
    0.36745039,
    0.36745,
    0.38215002,
    0.38215002,
    0.38215002,
    0.38215002,
    0.39685014,
    0.39685014,
    0.39685014,
    0.39685014,
    0.39685008,
    0.41155013,
    0.41155013,
    0.41155013,
    0.41155013,
    0.4115501,
    0.42625037,
    0.42625007,
    0.42625007,
    0.42625007,
    0.42625007,
    0.41155002,
    0.4262501,
]

d1_upper_z = [
    1.60924995,
    1.60924995,
    1.60924995,
    1.60924995,
    1.59455001,
    1.57984996,
    1.5651499,
    1.55044997,
    1.53574991,
    1.53574991,
    1.55044997,
    1.5651499,
    1.57984996,
    1.59455001,
    1.57984996,
    1.5651499,
    1.55044997,
    1.53574991,
    1.53574991,
    1.55044997,
    1.5651499,
    1.57984996,
    1.59455001,
    1.59455001,
    1.57984996,
    1.5651499,
    1.55044997,
    1.53574991,
    1.53574991,
    1.55044997,
    1.5651499,
    1.57984996,
    1.59455001,
    1.60924995,
    1.60924995,
]


d2_upper_r = [
    0.60125011,
    0.58655024,
    0.60125017,
    0.60125017,
    0.60125023,
    0.58655,
    0.58655,
    0.57185012,
    0.57185036,
    0.57185042,
    0.55715007,
    0.55715007,
    0.55715001,
    0.54245019,
    0.54245019,
    0.54245001,
    0.52775019,
    0.52775025,
    0.52775025,
    0.57185012,
    0.55715013,
    0.54245007,
    0.52774996,
]

d2_upper_z = [
    1.75705004,
    1.75705004,
    1.74234998,
    1.72765005,
    1.71294999,
    1.71294999,
    1.72765005,
    1.74234998,
    1.72765005,
    1.71294999,
    1.71294999,
    1.72765005,
    1.74234998,
    1.74234998,
    1.72765005,
    1.71294999,
    1.71294999,
    1.72765005,
    1.74234998,
    1.75705004,
    1.75705004,
    1.75705004,
    1.75705004,
]


d3_upper_r = [
    0.82854998,
    0.8432501,
    0.84325004,
    0.84325004,
    0.82855022,
    0.82855004,
    0.8285504,
    0.81384999,
    0.81385022,
    0.81385005,
    0.79915011,
    0.79915005,
    0.79915005,
    0.78445005,
    0.78444934,
    0.78445005,
    0.76975012,
    0.76975018,
    0.76975018,
    0.76975006,
    0.78445035,
    0.79915041,
    0.81384987,
]

d3_upper_z = [
    2.00405002,
    2.00405002,
    1.98935008,
    1.97465003,
    1.95995009,
    1.97465003,
    1.98935008,
    1.98935008,
    1.97465003,
    1.95995009,
    1.95995009,
    1.97465003,
    1.98935008,
    1.98935008,
    1.97465003,
    1.95995009,
    1.95995009,
    1.97465003,
    1.98935008,
    2.00405002,
    2.00405002,
    2.00405002,
    2.00405002,
]


d5_upper_r = [
    1.90735006,
    1.92205048,
    1.92205,
    1.92205,
    1.92205,
    1.92205,
    1.92205,
    1.90735018,
    1.9073503,
    1.9073503,
    1.9073503,
    1.9073503,
    1.90735006,
    1.89265001,
    1.89265013,
    1.89265013,
    1.89265013,
    1.89265013,
    1.89265001,
    1.87794995,
    1.87795019,
    1.87795019,
    1.87795019,
    1.87795019,
    1.87795019,
    1.87795019,
    1.89265037,
]

d5_upper_z = [
    1.99409997,
    1.99409997,
    1.97940004,
    1.96469998,
    1.95000005,
    1.93529999,
    1.92060006,
    1.9059,
    1.92060006,
    1.93529999,
    1.95000005,
    1.96469998,
    1.97940004,
    1.97940004,
    1.96469998,
    1.95000005,
    1.93529999,
    1.92060006,
    1.9059,
    1.9059,
    1.92060006,
    1.93529999,
    1.95000005,
    1.96469998,
    1.97940004,
    1.99409997,
    1.99409997,
]


d6_upper_r = [
    1.30704987,
    1.32175004,
    1.32175004,
    1.32174993,
    1.30705011,
    1.32174993,
    1.30704999,
    1.29235005,
    1.30704999,
    1.29235005,
    1.27765,
    1.27765,
    1.26295006,
    1.27765,
    1.26294994,
    1.24825013,
    1.26294994,
    1.24825001,
    1.24825001,
    1.24825013,
    1.26294994,
    1.27765,
    1.29234993,
]

d6_upper_z = [
    1.44564998,
    1.44564998,
    1.46034992,
    1.47504997,
    1.48974991,
    1.48975003,
    1.47504997,
    1.46034992,
    1.46035004,
    1.47504997,
    1.48975003,
    1.47504997,
    1.46034992,
    1.46034992,
    1.47504997,
    1.48974991,
    1.48975003,
    1.47504997,
    1.46034992,
    1.44564998,
    1.44564998,
    1.44564998,
    1.44564998,
]


d7_upper_r = [
    1.54205,
    1.55675006,
    1.55675006,
    1.55675006,
    1.54205012,
    1.55674994,
    1.54205,
    1.52735007,
    1.54204988,
    1.52735007,
    1.51265013,
    1.52734995,
    1.51265001,
    1.49794996,
    1.51265001,
    1.49794996,
    1.48325002,
    1.48325002,
    1.48325002,
    1.48325002,
    1.49795008,
    1.51265001,
    1.52734995,
]

d7_upper_z = [
    1.44564998,
    1.44564998,
    1.46034992,
    1.47504997,
    1.48974991,
    1.48974991,
    1.47504997,
    1.46034992,
    1.46034992,
    1.47504997,
    1.48974991,
    1.48974991,
    1.47504997,
    1.46035004,
    1.46034992,
    1.47504997,
    1.48974991,
    1.47504997,
    1.46035004,
    1.44564998,
    1.44564998,
    1.44564998,
    1.44564998,
]


dp_upper_r = [
    0.93285,
    0.94755,
    0.93285,
    0.94755,
    0.96224999,
    0.96224999,
    0.88875002,
    0.90345001,
    0.91815001,
    0.91815001,
    0.90345001,
    0.88875002,
    0.96224999,
    0.94755,
    0.93285,
    0.96224999,
    0.94755,
    0.93285,
    0.91815001,
    0.90345001,
    0.88875002,
    0.88874996,
    0.90345001,
    0.91815001,
]

dp_upper_z = [
    1.48634994,
    1.48634994,
    1.47165,
    1.47165,
    1.48634994,
    1.47165,
    1.47165,
    1.47165,
    1.47165,
    1.48634994,
    1.48634994,
    1.48634994,
    1.51574993,
    1.51574993,
    1.51574993,
    1.50105,
    1.50105,
    1.50105,
    1.51574993,
    1.51574993,
    1.51574993,
    1.50105,
    1.50105,
    1.50105,
]


p4_upper_r = [
    1.43500018,
    1.53500021,
    1.51000023,
    1.48500025,
    1.46000016,
    1.43500006,
    1.43500006,
    1.46100008,
    1.43500018,
    1.46100008,
    1.48700011,
    1.4610002,
    1.48700011,
    1.51300013,
    1.48700011,
    1.51300013,
    1.53900015,
    1.51300013,
    1.53900003,
    1.56500018,
    1.53900015,
    1.56500006,
    1.56500006,
]

p4_upper_z = [
    1.04014993,
    1.03714991,
    1.03714991,
    1.03714991,
    1.03714991,
    1.07814991,
    1.1161499,
    1.15414989,
    1.15414989,
    1.1161499,
    1.07814991,
    1.07814991,
    1.1161499,
    1.15414989,
    1.15414989,
    1.1161499,
    1.07814991,
    1.07814991,
    1.1161499,
    1.15414989,
    1.15414989,
    1.1161499,
    1.07814991,
]


p5_upper_r = [
    1.58500004,
    1.61000001,
    1.63499999,
    1.65999997,
    1.68499994,
    1.58500004,
    1.58500004,
    1.58500004,
    1.63499999,
    1.63499999,
    1.63499999,
    1.65999997,
    1.65999997,
    1.65999997,
    1.68499994,
    1.68500006,
    1.68500006,
    1.71500003,
    1.71500003,
    1.71500003,
    1.71500003,
    1.6099776,
    1.60997999,
]

p5_upper_z = [
    0.41065004,
    0.41065004,
    0.41065004,
    0.41065004,
    0.41065004,
    0.37165004,
    0.33265004,
    0.29365003,
    0.37165004,
    0.33265004,
    0.29365003,
    0.29365003,
    0.33262005,
    0.37165004,
    0.37165004,
    0.33265004,
    0.29365003,
    0.29365006,
    0.33265004,
    0.37165004,
    0.41065004,
    0.31147972,
    0.35528255,
]


p6_upper_r = [
    1.2887001,
    1.2887001,
    1.30900013,
    1.2887001,
    1.30900013,
    1.33414996,
    1.33414996,
    1.35444999,
    1.33414996,
    1.35444999,
]

p6_upper_z = [
    0.99616498,
    0.97586501,
    0.95556498,
    0.95556498,
    0.97586501,
    0.931265,
    0.91096503,
    0.89066499,
    0.89066499,
    0.91096503,
]


px_upper_r = [
    0.24849965,
    0.24849975,
    0.24849974,
    0.2344998,
    0.24849974,
    0.24849974,
    0.24849972,
    0.24849972,
    0.24849972,
    0.24849971,
    0.24849971,
    0.24849971,
    0.24849969,
    0.24849969,
    0.24849969,
    0.24849968,
    0.24849968,
    0.24849968,
    0.24849966,
    0.24849966,
    0.24849966,
    0.24849965,
    0.23449969,
    0.23449969,
    0.23449971,
    0.23449971,
    0.23449971,
    0.23449971,
    0.23449972,
    0.23449972,
    0.23449974,
    0.23449974,
    0.23449974,
    0.23449975,
    0.23449975,
    0.23449977,
    0.23449977,
    0.23449977,
    0.23449978,
    0.23449978,
    0.2344998,
    0.2344998,
]

px_upper_z = [
    1.41640627,
    1.03640544,
    1.0554055,
    1.03164983,
    1.07440555,
    1.0934056,
    1.11240554,
    1.13140559,
    1.15040565,
    1.1694057,
    1.18840575,
    1.20740581,
    1.22640586,
    1.24540591,
    1.26440585,
    1.2834059,
    1.30240595,
    1.32140601,
    1.34040606,
    1.35940611,
    1.37840617,
    1.39740622,
    1.41164911,
    1.39264905,
    1.37364912,
    1.35464919,
    1.33564925,
    1.31664932,
    1.29764926,
    1.27864933,
    1.2596494,
    1.24064946,
    1.22164953,
    1.20264947,
    1.18364954,
    1.16464961,
    1.14564967,
    1.12664974,
    1.10764968,
    1.08864975,
    1.06964982,
    1.05064988,
]


active_coil_dict = {}

active_coil_dict["Solenoid"] = {
    "R": [0.19475] * 324,
    "Z": list(np.linspace(-1.581, 1.581, 324)),
    "dR": 0.012,
    "dZ": 0.018,
    "polarity": 1,
    "resistivity": eta_copper,
    "multiplier": 1,
}

active_coil_dict["PX"] = {}
active_coil_dict["PX"]["1"] = {
    "R": px_upper_r,
    "Z": px_upper_z,
    "dR": 0.011,
    "dZ": 0.018,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}
active_coil_dict["PX"]["2"] = {
    "R": px_upper_r,
    "Z": [-1 * z for z in px_upper_z],
    "dR": 0.011,
    "dZ": 0.018,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}


active_coil_dict["D1"] = {}
active_coil_dict["D1"]["1"] = {
    "R": d1_upper_r,
    "Z": d1_upper_z,
    "dR": 0.0127,
    "dZ": 0.0127,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}
active_coil_dict["D1"]["2"] = {
    "R": d1_upper_r,
    "Z": [-1 * z for z in d1_upper_z],
    "dR": 0.0127,
    "dZ": 0.0127,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}

active_coil_dict["D2"] = {}
active_coil_dict["D2"]["1"] = {
    "R": d2_upper_r,
    "Z": d2_upper_z,
    "dR": 0.0127,
    "dZ": 0.0127,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}
active_coil_dict["D2"]["2"] = {
    "R": d2_upper_r,
    "Z": [-1 * z for z in d2_upper_z],
    "dR": 0.0127,
    "dZ": 0.0127,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}

active_coil_dict["D3"] = {}
active_coil_dict["D3"]["1"] = {
    "R": d3_upper_r,
    "Z": d3_upper_z,
    "dR": 0.0127,
    "dZ": 0.0127,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}
active_coil_dict["D3"]["2"] = {
    "R": d3_upper_r,
    "Z": [-1 * z for z in d3_upper_z],
    "dR": 0.0127,
    "dZ": 0.0127,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}

active_coil_dict["Dp"] = {}
active_coil_dict["Dp"]["1"] = {
    "R": dp_upper_r,
    "Z": dp_upper_z,
    "dR": 0.0127,
    "dZ": 0.0127,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}
active_coil_dict["Dp"]["2"] = {
    "R": dp_upper_r,
    "Z": [-1 * z for z in dp_upper_z],
    "dR": 0.0127,
    "dZ": 0.0127,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}

active_coil_dict["D5"] = {}
active_coil_dict["D5"]["1"] = {
    "R": d5_upper_r,
    "Z": d5_upper_z,
    "dR": 0.0127,
    "dZ": 0.0127,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}
active_coil_dict["D5"]["2"] = {
    "R": d5_upper_r,
    "Z": [-1 * z for z in d5_upper_z],
    "dR": 0.0127,
    "dZ": 0.0127,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}

active_coil_dict["D6"] = {}
active_coil_dict["D6"]["1"] = {
    "R": d6_upper_r,
    "Z": d6_upper_z,
    "dR": 0.0127,
    "dZ": 0.0127,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}
active_coil_dict["D6"]["2"] = {
    "R": d6_upper_r,
    "Z": [-1 * z for z in d6_upper_z],
    "dR": 0.0127,
    "dZ": 0.0127,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}

active_coil_dict["D7"] = {}
active_coil_dict["D7"]["1"] = {
    "R": d7_upper_r,
    "Z": d7_upper_z,
    "dR": 0.0127,
    "dZ": 0.0127,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}
active_coil_dict["D7"]["2"] = {
    "R": d7_upper_r,
    "Z": [-1 * z for z in d7_upper_z],
    "dR": 0.0127,
    "dZ": 0.0127,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}

active_coil_dict["P4"] = {}
active_coil_dict["P4"]["1"] = {
    "R": p4_upper_r,
    "Z": p4_upper_z,
    "dR": 0.024,
    "dZ": 0.037,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}
active_coil_dict["P4"]["2"] = {
    "R": p4_upper_r,
    "Z": [-1 * z for z in p4_upper_z],
    "dR": 0.024,
    "dZ": 0.037,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}

active_coil_dict["P5"] = {}
active_coil_dict["P5"]["1"] = {
    "R": p5_upper_r,
    "Z": p5_upper_z,
    "dR": 0.024,
    "dZ": 0.037,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}
active_coil_dict["P5"]["2"] = {
    "R": p5_upper_r,
    "Z": [-1 * z for z in p5_upper_z],
    "dR": 0.024,
    "dZ": 0.037,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}


active_coil_dict["P6"] = {}
active_coil_dict["P6"]["1"] = {
    "R": p6_upper_r,
    "Z": p6_upper_z,
    "dR": 0.02836,
    "dZ": 0.02836,
    "resistivity": eta_copper,
    "polarity": 1,
    "multiplier": 1,
}
active_coil_dict["P6"]["2"] = {
    "R": p6_upper_r,
    "Z": [-1 * z for z in p6_upper_z],
    "dR": 0.02836,
    "dZ": 0.02836,
    "resistivity": eta_copper,
    "polarity": -1,
    "multiplier": 1,
}


pickle.dump(active_coil_dict, open("active_coils.pickle", "wb"))


# Passive coils
# -------------

with open("Fiesta_full_passive.pickle", "rb") as f:
    data = pickle.load(f)

passive_coils = []
for l in data[0]:
    passive_coils.append(
        {"R": l[0], "Z": l[1], "dR": l[2], "dZ": l[3], "resistivity": l[4]}
    )

pickle.dump(passive_coils, open("passive_coils.pickle", "wb"))


# Wall
# ----

rwall = [
    1.56442,
    1.73298,
    1.34848,
    1.0882,
    0.902253,
    0.903669,
    0.533866,
    0.538011,
    0.332797,
    0.332797,
    0.334796,
    0.303115,
    0.305114,
    0.269136,
    0.271135,
    0.260841,
    0.260841,
    0.271135,
    0.269136,
    0.305114,
    0.303115,
    0.334796,
    0.332797,
    0.332797,
    0.538598,
    0.534469,
    0.90563,
    0.904219,
    1.0882,
    1.34848,
    1.73018,
    1.56442,
    1.37999,
    1.37989,
    1.19622,
    1.19632,
    1.05537,
    1.05528,
    0.947502,
    0.905686,
    0.899143,
    0.883388,
    0.867681,
    0.851322,
    0.833482,
    0.826063,
    0.822678,
    0.821023,
    0.820691,
    0.822887,
    0.827573,
    0.839195,
    0.855244,
    0.877567,
    0.899473,
    1.18568,
    1.279,
    1.296,
    1.521,
    1.521,
    1.8,
    1.8,
    1.521,
    1.521,
    1.296,
    1.279,
    1.18568,
    0.899473,
    0.877567,
    0.855244,
    0.839195,
    0.827573,
    0.822887,
    0.820691,
    0.821023,
    0.822678,
    0.826063,
    0.833482,
    0.851322,
    0.867681,
    0.883388,
    0.899143,
    0.905686,
    0.947502,
    1.05528,
    1.05537,
    1.19632,
    1.19622,
    1.37989,
    1.37999,
    1.56442,
]

zwall = [
    1.56424,
    1.67902,
    2.06041,
    2.05946,
    1.87565,
    1.87424,
    1.50286,
    1.49874,
    1.29709,
    1.094,
    1.094,
    0.8475,
    0.8475,
    0.565,
    0.565,
    0.495258,
    -0.507258,
    -0.577,
    -0.577,
    -0.8595,
    -0.8595,
    -1.106,
    -1.106,
    -1.30909,
    -1.5099,
    -1.51403,
    -1.88406,
    -1.88547,
    -2.06614,
    -2.06519,
    -1.68099,
    -1.56884,
    -1.57688,
    -1.57673,
    -1.58475,
    -1.5849,
    -1.59105,
    -1.59091,
    -1.59561,
    -1.59556,
    -1.59478,
    -1.59026,
    -1.58087,
    -1.56767,
    -1.54624,
    -1.52875,
    -1.51517,
    -1.49624,
    -1.47724,
    -1.44582,
    -1.41923,
    -1.38728,
    -1.35284,
    -1.3221,
    -1.30018,
    -1.0138,
    -0.8423,
    -0.8202,
    -0.8202,
    -0.25,
    -0.25,
    0.25,
    0.25,
    0.8156,
    0.8156,
    0.8377,
    1.0092,
    1.29558,
    1.3175,
    1.34824,
    1.38268,
    1.41463,
    1.44122,
    1.47264,
    1.49164,
    1.51057,
    1.52415,
    1.54164,
    1.56307,
    1.57627,
    1.58566,
    1.59018,
    1.59096,
    1.59101,
    1.58631,
    1.58645,
    1.5803,
    1.58015,
    1.57213,
    1.57228,
    1.56424,
]

wall = []
for i in range(len(rwall)):
    wall.append({"R": rwall[i], "Z": zwall[i]})

pickle.dump(wall, open("wall.pickle", "wb"))


wall = np.concatenate(
    (np.array(rwall)[:, np.newaxis], np.array(zwall)[:, np.newaxis]), axis=-1
)
limiter_pts = np.concatenate(
    (wall[7:25], wall[48:58], wall[59:60], wall[62:63], wall[64:74], wall[7:8]), axis=0
)
limiter = []
for i in range(len(limiter_pts)):
    limiter.append({"R": limiter_pts[i, 0], "Z": limiter_pts[i, 1]})
pickle.dump(limiter, open("limiter.pickle", "wb"))
